@charset "UTF-8";
/* _mixins.scss */

// breakpoint media queries
@mixin res($key, $map: $--breakpoints) {
  @if map-has-key($map, $key) {
    @media only screen and #{inspect(map-get($map, $key))} {
      @content;
    }
  } @else {
    @warn "Undefeined points: `#{$map}`";
  }
}
// Mixin to prefix a property
@mixin prefix($property, $value, $prefixes: ()) {
  @each $prefix in $prefixes {
    #{'-' + $prefix + '-' + $property}: $value;
  }
  // Output standard non-prefixed declaration
  #{$property}: $value;
}

// Mixin to box-sizing
@mixin boxSizing{
  box-sizing: border-box;
}

// Mixin to clearing effect
@mixin clearfix {
  &:after{
    display: block;
    content:"";
    clear:both;
  }
}

// Mixin to make box-shadow
@mixin boxShadow {
  @include prefix(box-shadow, (9px 9px 25px rgba(163, 177, 198, 0.25), inset -9px 0px 10px rgba(224, 229, 236, 0.1)), moz webkit);
}

// Style module for checkbox & radio
@mixin controller(){
  position: relative;
  cursor: pointer;
  //padding: 1em;

  &::selection {
    background: transparent;
  }

  input + span {
    background: white;
    content: "";
    display: inline-block;
    margin: 0 .5em 0 0;
    padding: 0;
    vertical-align: middle;
    width: 26px;
    height: 26px;
    transform: translate3d(0, 0, 0);
    -webkit-backface-visibility: hidden;

    &::after {
      content: "";
      display: block;
      transform: scale(1);
      transition: transform .2s;
    }
  }

  @media screen and (min-width: 768px) {
    &:hover input + span {
      box-shadow: 0 2px 4px rgba($black, .15);
    }
  }

  input:active + span {
    box-shadow: 0 4px 8px rgba($black, .15);
  }

  input:focus + span {
    box-shadow: 0 0 0 3px lightblue;
  }
  input:checked + span{
    background: $primary;
  }
  input:checked + span::after {
    transform: scale(1.2);
    background: url("../img/common/ico_checkbox_on.svg") center center no-repeat;
  }

  input {
    position: absolute;
    cursor: pointer;
    opacity: 0;
  }
}

// make the bullet-list
@mixin bullet($bgColor, $margin){
  &:before{
    content:"";
    display: inline-block;
    width:6px;
    height: 6px;
    background-color: $bgColor;
    border-radius: 50%;
    vertical-align: unset;
    transform: translateY(-.25em);
    //margin-right:4px;
    margin-right: $margin;
  }
}

// quick menu Style
@mixin quickMenu($bgColor, $color){
  background-color: $bgColor;
  color: $color;
}


// animation
@mixin keyframes($name) {
  @-webkit-keyframes #{$name} {
    @content;
  }
  @-moz-keyframes #{$name} {
    @content;
  }
  @-ms-keyframes #{$name} {
    @content;
  }
  @keyframes #{$name} {
    @content;
  }
}


// hover
@mixin hover() {
  &:hover { @content; }
}
@mixin hover-focus() {
  &:hover,
  &:focus {
    @content;
  }
}
@mixin plain-hover-focus() {
  &,
  &:hover,
  &:focus {
    @content;
  }
}
@mixin hover-focus-active() {
  &:hover,
  &:focus,
  &:active {
    @content;
  }
}

